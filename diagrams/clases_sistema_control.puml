@startuml Tp

title "Sistema de control Central Nuclear"
!theme reddress-darkblue
scale 1.3
skinparam Linetype ortho

skinparam titleBorderRoundCorner 15
skinparam titleBorderThickness 2
skinparam titleBorderColor skyBlue
skinparam titleBackgroundColor #96a2ff

' Procesamiento de Datos
class ComprobadorSaludReactor {
    -generadorDeAlertas: GeneradorDeAlertas;
    -setGenerador(g: GeneradorDeAlertas)
    - estaEncendido(reactor: Reactor): boolean;
    - tieneTemperaturaSegura(reactor: Reactor): boolean;
    - produceEnergiaEnRango(reactor: Reactor): boolean;
    +lanzarAlerta();
}

class SistemaDeControl
{
    - operadores: Operador[];
    - compobadorSalud: ComprobadorSaludReactor;
}

' Operador
class Operador {
    class Operador {
    - nombre : String
    - reactor : Reactor
    + constructor(reactor: Reactor, nombre: String)
    + realizarOperacion(comando : Command) : void
}

interface Command{
    + ejecutar (comando : Command) : void
}

class ApagarReactor implements Command{
    + ejecutar (comando : Command) : void
}

class EncenderReactor implements Command{
    + ejecutar (comando : Command) : void
}

class InsertarBarraDeControl implements Command{
    + ejecutar (comando : Command) : void
}

class ObtenerInformacionReactor implements Command{
    + ejecutar (comando : Command) : void
}

class ReportarEstado implements Command{
    + ejecutar (comando : Command) : void
}

class SacarBarraDeControl implements Command{
    + ejecutar (comando : Command) : void
}






interface Alerta {
    + obtenerTipoDeAlerta(): enumTipoAlerta;
    + obtenerMensajeDeAlerta(): string;
    + obtenerTimestampDeAlerta(): Date;
}

class AlertaCritica{
    + obtenerTipoDeAlerta(): enumTipoAlerta;
    + obtenerMensajeDeAlerta(): string;
    + obtenerTimestampDeAlerta(): Date;

}

class AlertaEstandar{
    + obtenerTipoDeAlerta(): enumTipoAlerta;
    + obtenerMensajeDeAlerta(): string;
    + obtenerTimestampDeAlerta(): Date;
}

class NotificadorDeAlerta {
    + notificarAlerta(alerta:Alerta);
}

enum TipoAlerta {
    CRITICA,
    ESTANDAR
}

interface GeneradorDeAlertas
{
    + generarAlerta(): IAlerta;
}

class GeneradorDeAlertasEstandar
{
    + generarAlerta(): IAlerta;
}

class GeneradorDeAlertasCritica
{
    + generarAlerta(): IAlerta;
}

' Manejo de comandos
'enum ComandosDisponibles {
    'BARRA_CONTROL
    'REACTOR,
    'REFRIGERACION,
    'SENSOR_TEMPERATURA,
    'SENSOR_NIVEL_AGUA,
    'REPORTAR_ESTADO
'}

'class InterpreteDeComandos {
    '- lanzarAccion();
    '+ interpretarComando();
'}

' Acciones
'interface Accion {

'}

'' Barras de control
'class ManejadorDeBarraDeControl implements Accion {
    '+ obtenerBarrasDisponibles(): BarraDeControl[];
    '+ insertarBarra();
    '+ quitarBarra();
'}

'class Comando {

'}

' Acciones autom√°ticas de seguridad
'class ModuloAccionAutomaticaSeguridad {
    '+ apagarPorEmergencia();
'}

' Relaciones
SistemaDeControl o-d- Operador
SistemaDeControl o-r- ComprobadorSaludReactor
ComprobadorSaludReactor <|.r. Alerta
Alerta <|.r. AlertaEstandar
Alerta <|.u. AlertaCritica
GeneradorDeAlertas <|.. GeneradorDeAlertasEstandar
GeneradorDeAlertas <|.. GeneradorDeAlertasCritica
NotificadorDeAlerta <.u. Alerta
TipoAlerta -[hidden]r- NotificadorDeAlerta
AlertaCritica <.u. GeneradorDeAlertasCritica
AlertaEstandar <.u.. GeneradorDeAlertasEstandar


@enduml